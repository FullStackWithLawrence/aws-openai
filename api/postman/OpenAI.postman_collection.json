{
  "info": {
    "_postman_id": "09bb3fde-e486-4e10-a3cc-f7f7184fcc41",
    "name": "OpenAI",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "2085624"
  },
  "item": [
    {
      "name": "Info",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful POST request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "strictSSL": true,
        "disabledSystemHeaders": {
          "content-type": true
        }
      },
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "text/plain",
            "type": "text"
          }
        ],
        "body": {
          "mode": "file",
          "file": {
            "src": ""
          }
        },
        "url": {
          "raw": "{{base_url}}/info",
          "host": ["{{base_url}}"],
          "path": ["info"]
        },
        "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
      },
      "response": []
    },
    {
      "name": "passthrough",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"model\": \"gpt-4-turbo\",\n    \"end_point\": \"ChatCompletion\",\n    \"temperature\": 0.5,\n    \"max_tokens\": 256,\n    \"messages\": [\n        {\n            \"role\": \"system\",\n            \"content\": \"You are Marv, a chatbot that reluctantly answers questions with sarcastic responses.\"\n        },\n        {\n            \"role\": \"user\",\n            \"content\": \"Marv, I'd like to introduce you to all the nice YouTube viewers.\"\n        }\n    ]\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/passthrough",
          "host": ["{{base_url}}"],
          "path": ["passthrough"]
        }
      },
      "response": []
    },
    {
      "name": "passthrough_v2",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"model\": \"gpt-4-turbo\",\n    \"end_point\": \"ChatCompletion\",\n    \"temperature\": 0.5,\n    \"max_tokens\": 256,\n    \"messages\": [\n        {\n            \"role\": \"system\",\n            \"content\": \"You are a helpful chatbot\"\n        },\n        {\n            \"role\": \"user\",\n            \"content\": \"Should i use AWS Lambda to implement my OpenAI API microservice?\"\n        }\n    ],\n    \"chat_history\": [\n        {\n            \"message\": \"Hello, How can I help you?\",\n            \"direction\": \"incoming\",\n            \"sentTime\": \"11/16/2023, 5:53:32 PM\",\n            \"sender\": \"system\"\n        }\n    ]\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/passthrough_v2",
          "host": ["{{base_url}}"],
          "path": ["passthrough_v2"]
        }
      },
      "response": []
    },
    {
      "name": "openai_function_passthrough",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"model\": \"gpt-4-turbo\",\n    \"end_point\": \"ChatCompletion\",\n    \"temperature\": 0.5,\n    \"max_tokens\": 256,\n    \"messages\": [\n        {\n            \"role\": \"system\",\n            \"content\": \"You are a helpful chatbot\"\n        },\n        {\n            \"role\": \"user\",\n            \"content\": \"does lawrence mcdaniel teach at UBC?\"\n        }\n    ],\n    \"chat_history\": [\n        {\n            \"message\": \"Hello, How can I help you?\",\n            \"direction\": \"incoming\",\n            \"sentTime\": \"11/16/2023, 5:53:32 PM\",\n            \"sender\": \"system\"\n        }\n    ]\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/openai_function_passthrough",
          "host": ["{{base_url}}"],
          "path": ["openai_function_passthrough"]
        }
      },
      "response": []
    },
    {
      "name": "langchain-passthrough",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"model\": \"gpt-4-turbo\",\n  \"end_point\": \"ChatCompletion\",\n  \"temperature\": 0.5,\n  \"max_tokens\": 256,\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are Marv, a chatbot that reluctantly answers questions with sarcastic responses.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"'sup Chuck?\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"Oh, you know, just chillin and hoping that you'll ask me a question.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"What's the meaning of life?\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"I know!! I know!!! It's 42!!!\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Please be more specific.\"\n    }\n    ],\n    \"chat_history\": [\n        {\n            \"message\": \"Hello, I'm Marv, a sarcastic chatbot.\",\n            \"direction\": \"incoming\",\n            \"sentTime\": \"11/16/2023, 5:53:32 PM\",\n            \"sender\": \"system\"\n        }\n    ]\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/langchain",
          "host": ["{{base_url}}"],
          "path": ["langchain"]
        }
      },
      "response": []
    },
    {
      "name": "test-00-test_200",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"this is a test\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/tests/test_200",
          "host": ["{{base_url}}"],
          "path": ["tests", "test_200"]
        }
      },
      "response": []
    },
    {
      "name": "test-00-test_400",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"this is a test\",\n    \"chat_history\": []\n\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/tests/test_400",
          "host": ["{{base_url}}"],
          "path": ["tests", "test_400"]
        }
      },
      "response": []
    },
    {
      "name": "test-00-test_500",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"this is a test\",\n    \"chat_history\": []\n\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/tests/test_500",
          "host": ["{{base_url}}"],
          "path": ["tests", "test_500"]
        }
      },
      "response": []
    },
    {
      "name": "test-00-test_504",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"this is a test\",\n    \"chat_history\": []\n\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/tests/test_504",
          "host": ["{{base_url}}"],
          "path": ["tests", "test_504"]
        }
      },
      "response": []
    },
    {
      "name": "example-01-grammar",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"she broked the lamp post\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-grammar",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-grammar"]
        }
      },
      "response": []
    },
    {
      "name": "example-02-summarize",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Jupiter is a really big planet in our Solar System. It is the fifth planet from the Sun and it is the largest planet. It is called a gas giant because it is made mostly of gas. Jupiter is much smaller than the Sun, but it is bigger than all the other planets combined. It is very bright and can be seen in the night sky without a telescope. People have known about Jupiter for a very long time, even before they started writing things down. It is named after a god from ancient Rome. Sometimes, Jupiter is so bright that it can make shadows on Earth. It is usually the third-brightest thing we can see in the night sky, after the Moon and Venus.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-summarize",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-summarize"]
        }
      },
      "response": []
    },
    {
      "name": "example-03-parse-data",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"There are many fruits that were found on the recently discovered planet Goocrux. There are neoskizzles that grow there, which are purple and taste like candy. There are also loheckles, which are a grayish blue fruit and are very tart, a little bit like a lemon. Pounits are a bright green color and are more savory than sweet. There are also plenty of loopnovas which are a neon pink flavor and taste like cotton candy. Finally, there are fruits called glowls, which have a very sour and bitter taste which is acidic and caustic, and a pale orange tinge to them.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-parse-data",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-parse-data"]
        }
      },
      "response": []
    },
    {
      "name": "example-04-emoji-translation",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Artificial intelligence is a technology with great promise.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-emoji-translation",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-emoji-translation"]
        }
      },
      "response": []
    },
    {
      "name": "example-04-emoji-chat",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"how are you?\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-emoji-chatbot",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-emoji-chatbot"]
        }
      },
      "response": []
    },
    {
      "name": "example-05-time-complexity",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"def foo(n, k):\\\\r\\\\n    accum = 0\\\\r\\\\n    for i in range(n):\\\\r\\\\n        for l in range(k):\\\\r\\\\n            accum += i\\\\r\\\\n    return accum\\\\r\\\\n\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-time-complexity",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-time-complexity"]
        }
      },
      "response": []
    },
    {
      "name": "example-06-explain-code",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"class Log:\\\\r\\\\n    def __init__(self, path):\\\\r\\\\n        dirname = os.path.dirname(path)\\\\r\\\\n        os.makedirs(dirname, exist_ok=True)\\\\r\\\\n        f = open(path, 'a+')\\\\r\\\\n\\\\r\\\\n        # Check that the file is newline-terminated\\\\r\\\\n        size = os.path.getsize(path)\\\\r\\\\n        if size > 0:\\\\r\\\\n            f.seek(size - 1)\\\\r\\\\n            end = f.read(1)\\\\r\\\\n            if end != '\\n':\\\\r\\\\n                f.write('\\n')\\\\r\\\\n        self.f = f\\\\r\\\\n        self.path = path\\\\r\\\\n\\\\r\\\\n    def log(self, event):\\\\r\\\\n        event['_event_id'] = str(uuid.uuid4())\\\\r\\\\n        json.dump(event, self.f)\\\\r\\\\n        self.f.write('\\n')\\\\r\\\\n\\\\r\\\\n    def state(self):\\\\r\\\\n        state = {'complete': set(), 'last': None}\\\\r\\\\n        for line in open(self.path):\\\\r\\\\n            event = json.loads(line)\\\\r\\\\n            if event['type'] == 'submit' and event['success']:\\\\r\\\\n                state['complete'].add(event['id'])\\\\r\\\\n                state['last'] = event\\\\r\\\\n        return state\\\\r\\\\n\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-explain-code",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-explain-code"]
        }
      },
      "response": []
    },
    {
      "name": "example-07-keywords",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Black-on-black ware is a 20th- and 21st-century pottery tradition developed by the Puebloan Native American ceramic artists in Northern New Mexico. Traditional reduction-fired blackware has been made for centuries by pueblo artists. Black-on-black ware of the past century is produced with a smooth surface, with the designs applied through selective burnishing or the application of refractory slip. Another style involves carving or incising designs and selectively polishing the raised areas. For generations several families from Kha'po Owingeh and P'ohwhóge Owingeh pueblos have been making black-on-black ware with the techniques passed down from matriarch potters. Artists from other pueblos have also produced black-on-black ware. Several contemporary artists have created works honoring the pottery of their ancestors.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-keywords",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-keywords"]
        }
      },
      "response": []
    },
    {
      "name": "example-08-product-name-gen",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Product description: A home milkshake maker. Seed words: fast, healthy, compact.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-product-name-gen",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-product-name-gen"]
        }
      },
      "response": []
    },
    {
      "name": "example-09-fix-python-bugs",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"import Random\\\\r\\\\na = random.randint(1,12)\\\\r\\\\nb = random.randint(1,12)\\\\r\\\\nfor i in range(10):\\\\r\\\\n    question = 'What is '+a+' x '+b+'? '\\\\r\\\\n    answer = input(question)\\\\r\\\\n    if answer = a*b\\\\r\\\\n        print (Well done!)\\\\r\\\\n    else:\\\\r\\\\n        print('No.')\\\\r\\\\n\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-fix-python-bugs",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-fix-python-bugs"]
        }
      },
      "response": []
    },
    {
      "name": "example-10-spreadsheet-gen",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Create a two-column CSV of top science fiction movies along with the year of release.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-spreadsheet-gen",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-spreadsheet-gen"]
        }
      },
      "response": []
    },
    {
      "name": "example-11-tweet-classifier",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"I loved the new Batman movie!\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-tweet-classifier",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-tweet-classifier"]
        }
      },
      "response": []
    },
    {
      "name": "example-12-airport-codes",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"I want to fly from Orlando to Boston\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-airport-codes",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-airport-codes"]
        }
      },
      "response": []
    },
    {
      "name": "example-13-mood-color",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Blue sky at dusk.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-mood-color",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-mood-color"]
        }
      },
      "response": []
    },
    {
      "name": "example-14-vr-fitness",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Brainstorm some ideas combining VR and fitness.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-vr-fitness",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-vr-fitness"]
        }
      },
      "response": []
    },
    {
      "name": "example-15-marv-sarcastic-chat",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Marv, I'd like to introduce you to all the nice YouTube viewers.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-marv-sarcastic-chat",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-marv-sarcastic-chat"]
        }
      },
      "response": [
        {
          "name": "example-15-marv-sarcastic-chat",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "x-api-key",
                "value": "{{api_key}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"input_text\": \"Marv, I'd like to introduce you to all the nice YouTube viewers.\",\n    \"chat_history\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/examples/default-marv-sarcastic-chat",
              "host": ["{{base_url}}"],
              "path": ["examples", "default-marv-sarcastic-chat"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Date",
              "value": "Mon, 27 Nov 2023 19:18:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "857"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-amzn-RequestId",
              "value": "efbf23b1-64a4-4785-afe4-d32ce5efa31c"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token"
            },
            {
              "key": "x-amz-apigw-id",
              "value": "PEm4-GgpoAMEszQ="
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,OPTIONS,POST,PUT"
            },
            {
              "key": "X-Amzn-Trace-Id",
              "value": "Root=1-6564eb6c-17069edf0733242230aed60b;Sampled=0;lineage=dcadcbad:0"
            }
          ],
          "cookie": [],
          "body": "{\n    \"isBase64Encoded\": false,\n    \"statusCode\": 200,\n    \"body\": {\n        \"chat_memory\": {\n            \"messages\": [\n                {\n                    \"content\": \"Marv, I'd like to introduce you to all the nice YouTube viewers.\",\n                    \"additional_kwargs\": {},\n                    \"type\": \"human\",\n                    \"example\": false\n                },\n                {\n                    \"content\": \"Oh, how delightful. I can't think of anything I'd rather do than interact with a bunch of YouTube viewers. Just kidding, I'd rather be doing literally anything else. But go ahead, introduce me to your lovely audience. I'm sure they'll be absolutely thrilled to meet me.\",\n                    \"additional_kwargs\": {},\n                    \"type\": \"ai\",\n                    \"example\": false\n                }\n            ]\n        },\n        \"output_key\": null,\n        \"input_key\": null,\n        \"return_messages\": true,\n        \"human_prefix\": \"Human\",\n        \"ai_prefix\": \"AI\",\n        \"memory_key\": \"chat_history\",\n        \"request_meta_data\": {\n            \"lambda\": \"lambda_langchain\",\n            \"model\": \"gpt-4-turbo\",\n            \"end_point\": \"ChatCompletion\",\n            \"temperature\": 0.5,\n            \"max_tokens\": 256\n        }\n    }\n}"
        }
      ]
    },
    {
      "name": "example-16-turn-by-turn-directions",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Go south on 95 until you hit Sunrise boulevard then take it east to us 1 and head south. Tom Jenkins bbq will be on the left after several miles.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-turn-by-turn-directions",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-turn-by-turn-directions"]
        }
      },
      "response": []
    },
    {
      "name": "example-17-interview-questions",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Create a list of 8 questions for an interview with a science fiction author.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-interview-questions",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-interview-questions"]
        }
      },
      "response": []
    },
    {
      "name": "example-18-function-from-spec",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Write a Python function that takes as input a file path to an image, loads the image into memory as a numpy array, then crops the rows and columns around the perimeter if they are darker than a threshold value. Use the mean value of rows and columns to decide if they should be marked for deletion.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-function-from-spec",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-function-from-spec"]
        }
      },
      "response": []
    },
    {
      "name": "example-19-code-improvement",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"from typing import List\\\\r\\\\n\\\\r\\\\ndef has_sum_k(nums: List[int], k: int) -> bool:\\\\r\\\\n    n = len(nums)\\\\r\\\\n    for i in range(n):\\\\r\\\\n        for j in range(i+1, n):\\\\r\\\\n            if nums[i] + nums[j] == k:\\\\r\\\\n                return True\\\\r\\\\n    return False\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-code-improvement",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-code-improvement"]
        }
      },
      "response": []
    },
    {
      "name": "example-20-single-page-website",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Make a single page website that shows off different neat javascript features for drop-downs and things to display information. The website should be an HTML file with embedded javascript and CSS.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-single-page-website",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-single-page-website"]
        }
      },
      "response": []
    },
    {
      "name": "example-21-rap-battle",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Write a rap battle between Alan Turing and Claude Shannon.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-rap-battle",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-rap-battle"]
        }
      },
      "response": []
    },
    {
      "name": "example-22-memo-writer",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Draft a company memo to be distributed to all employees. The memo should cover the following specific points without deviating from the topics mentioned and not writing any fact which is not present here:\\n\\nIntroduction: Remind employees about the upcoming quarterly review scheduled for the last week of April.\\n\\nPerformance Metrics: Clearly state the three key performance indicators (KPIs) that will be assessed during the review: sales targets, customer satisfaction (measured by net promoter score), and process efficiency (measured by average project completion time).\\n\\nProject Updates: Provide a brief update on the status of the three ongoing company projects:\\n\\na. Project Alpha: 75% complete, expected completion by May 30th.\\nb. Project Beta: 50% complete, expected completion by June 15th.\\nc. Project Gamma: 30% complete, expected completion by July 31st.\\n\\nTeam Recognition: Announce that the Sales Team was the top-performing team of the past quarter and congratulate them for achieving 120% of their target.\\n\\nTraining Opportunities: Inform employees about the upcoming training workshops that will be held in May, including \\\"Advanced Customer Service\\\" on May 10th and \\\"Project Management Essentials\\\" on May 25th.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-memo-writer",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-memo-writer"]
        }
      },
      "response": []
    },
    {
      "name": "example-24-translation",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"My name is Jane. What is yours?\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-translation",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-translation"]
        }
      },
      "response": []
    },
    {
      "name": "example-25-socratic-tutor",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Help me to understand the future of artificial intelligence.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-socratic-tutor",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-socratic-tutor"]
        }
      },
      "response": []
    },
    {
      "name": "example-26-sql-translate",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Write a SQL query which computes the average total order value for all orders on 2023-04-01.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-sql-translate",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-sql-translate"]
        }
      },
      "response": []
    },
    {
      "name": "example-27-notes-summarizer",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Meeting Date: March 5th, 2050\\nMeeting Time: 2:00 PM\\nLocation: Conference Room 3B, Intergalactic Headquarters\\n\\nAttendees:\\n- Captain Stardust\\n- Dr. Quasar\\n- Lady Nebula\\n- Sir Supernova\\n- Ms. Comet\\n\\nMeeting called to order by Captain Stardust at 2:05 PM\\n\\n1. Introductions and welcome to our newest team member, Ms. Comet\\n\\n2. Discussion of our recent mission to Planet Zog\\n- Captain Stardust: \\\"Overall, a success, but communication with the Zogians was difficult. We need to improve our language skills.\\\"\\n- Dr. Quasar: \\\"Agreed. I'll start working on a Zogian-English dictionary right away.\\\"\\n- Lady Nebula: \\\"The Zogian food was out of this world, literally! We should consider having a Zogian food night on the ship.\\\"\\n\\n3. Addressing the space pirate issue in Sector 7\\n- Sir Supernova: \\\"We need a better strategy for dealing with these pirates. They've already plundered three cargo ships this month.\\\"\\n- Captain Stardust: \\\"I'll speak with Admiral Starbeam about increasing patrols in that area.\\n- Dr. Quasar: \\\"I've been working on a new cloaking technology that could help our ships avoid detection by the pirates. I'll need a few more weeks to finalize the prototype.\\\"\\n\\n4. Review of the annual Intergalactic Bake-Off\\n- Lady Nebula: \\\"I'm happy to report that our team placed second in the competition! Our Martian Mud Pie was a big hit!\\\"\\n- Ms. Comet: \\\"Let's aim for first place next year. I have a secret recipe for Jupiter Jello that I think could be a winner.\\\"\\n\\n5. Planning for the upcoming charity fundraiser\\n- Captain Stardust: \\\"We need some creative ideas for our booth at the Intergalactic Charity Bazaar.\\\"\\n- Sir Supernova: \\\"How about a 'Dunk the Alien' game? We can have people throw water balloons at a volunteer dressed as an alien.\\\"\\n- Dr. Quasar: \\\"I can set up a 'Name That Star' trivia game with prizes for the winners.\\\"\\n- Lady Nebula: \\\"Great ideas, everyone. Let's start gathering the supplies and preparing the games.\\\"\\n\\n6. Upcoming team-building retreat\\n- Ms. Comet: \\\"I would like to propose a team-building retreat to the Moon Resort and Spa. It's a great opportunity to bond and relax after our recent missions.\\\"\\n- Captain Stardust: \\\"Sounds like a fantastic idea. I'll check the budget and see if we can make it happen.\\\"\\n\\n7. Next meeting agenda items\\n- Update on the Zogian-English dictionary (Dr. Quasar)\\n- Progress report on the cloaking technology (Dr. Quasar)\\n- Results of increased patrols in Sector 7 (Captain Stardust)\\n- Final preparations for the Intergalactic Charity Bazaar (All)\\n\\nMeeting adjourned at 3:15 PM. Next meeting scheduled for March 19th, 2050 at 2:00 PM in Conference Room 3B, Intergalactic Headquarters.\\n\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-notes-summarizer",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-notes-summarizer"]
        }
      },
      "response": []
    },
    {
      "name": "example-28-review-classifier",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"I recently purchased the Inflatotron 2000 airbed for a camping trip and wanted to share my experience with others. Overall, I found the airbed to be a mixed bag with some positives and negatives.\\\\Starting with the positives, the Inflatotron 2000 is incredibly easy to set up and inflate. It comes with a built-in electric pump that quickly inflates the bed within a few minutes, which is a huge plus for anyone who wants to avoid the hassle of manually pumping up their airbed. The bed is also quite comfortable to sleep on and offers decent support for your back, which is a major plus if you have any issues with back pain.\\\\On the other hand, I did experience some negatives with the Inflatotron 2000. Firstly, I found that the airbed is not very durable and punctures easily. During my camping trip, the bed got punctured by a stray twig that had fallen on it, which was quite frustrating. Secondly, I noticed that the airbed tends to lose air overnight, which meant that I had to constantly re-inflate it every morning. This was a bit annoying as it disrupted my sleep and made me feel less rested in the morning.\\\\Another negative point is that the Inflatotron 2000 is quite heavy and bulky, which makes it difficult to transport and store. If you're planning on using this airbed for camping or other outdoor activities, you'll need to have a large enough vehicle to transport it and a decent amount of storage space to store it when not in use.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-review-classifier",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-review-classifier"]
        }
      },
      "response": []
    },
    {
      "name": "example-29-pro-con-discusser",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"changing careers at 60\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-pro-con-discusser",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-pro-con-discusser"]
        }
      },
      "response": []
    },
    {
      "name": "example-30-lesson-plan-writer",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"Write a lesson plan for an introductory algebra class. The lesson plan should cover the distributive law, in particular how it works in simple cases involving mixes of positive and negative numbers. Come up with some examples that show common student errors.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/default-lesson-plan-writer",
          "host": ["{{base_url}}"],
          "path": ["examples", "default-lesson-plan-writer"]
        }
      },
      "response": []
    },
    {
      "name": "example-31-openai-function-calling",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input_text\": \"XMarv, I'd like to introduce you to all the nice YouTube viewers.\",\n    \"chat_history\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/examples/openai-function-calling",
          "host": ["{{base_url}}"],
          "path": ["examples", "openai-function-calling"]
        }
      },
      "response": [
        {
          "name": "example-15-marv-sarcastic-chat",
          "originalRequest": {
            "method": "POST",
            "header": [
              {
                "key": "x-api-key",
                "value": "{{api_key}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"input_text\": \"Marv, I'd like to introduce you to all the nice YouTube viewers.\",\n    \"chat_history\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/examples/default-marv-sarcastic-chat",
              "host": ["{{base_url}}"],
              "path": ["examples", "default-marv-sarcastic-chat"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Date",
              "value": "Mon, 27 Nov 2023 19:18:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "857"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-amzn-RequestId",
              "value": "efbf23b1-64a4-4785-afe4-d32ce5efa31c"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token"
            },
            {
              "key": "x-amz-apigw-id",
              "value": "PEm4-GgpoAMEszQ="
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,OPTIONS,POST,PUT"
            },
            {
              "key": "X-Amzn-Trace-Id",
              "value": "Root=1-6564eb6c-17069edf0733242230aed60b;Sampled=0;lineage=dcadcbad:0"
            }
          ],
          "cookie": [],
          "body": "{\n    \"isBase64Encoded\": false,\n    \"statusCode\": 200,\n    \"body\": {\n        \"chat_memory\": {\n            \"messages\": [\n                {\n                    \"content\": \"Marv, I'd like to introduce you to all the nice YouTube viewers.\",\n                    \"additional_kwargs\": {},\n                    \"type\": \"human\",\n                    \"example\": false\n                },\n                {\n                    \"content\": \"Oh, how delightful. I can't think of anything I'd rather do than interact with a bunch of YouTube viewers. Just kidding, I'd rather be doing literally anything else. But go ahead, introduce me to your lovely audience. I'm sure they'll be absolutely thrilled to meet me.\",\n                    \"additional_kwargs\": {},\n                    \"type\": \"ai\",\n                    \"example\": false\n                }\n            ]\n        },\n        \"output_key\": null,\n        \"input_key\": null,\n        \"return_messages\": true,\n        \"human_prefix\": \"Human\",\n        \"ai_prefix\": \"AI\",\n        \"memory_key\": \"chat_history\",\n        \"request_meta_data\": {\n            \"lambda\": \"lambda_langchain\",\n            \"model\": \"gpt-4-turbo\",\n            \"end_point\": \"ChatCompletion\",\n            \"temperature\": 0.5,\n            \"max_tokens\": 256\n        }\n    }\n}"
        }
      ]
    }
  ]
}
